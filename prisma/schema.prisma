generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id           Int       @id @default(autoincrement())
    firstName    String
    lastName     String
    email        String    @unique
    phoneNumber  String?
    address      String?
    dateOfBirth  DateTime?
    profileImage String?

    // Define relationships
    vehicles    Vehicle[] // One-to-many relationship with vehicles
    inspections Inspection[] // One-to-many relationship with inspections

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    Media     Media[]

    @@index([id])
}

model Vehicle {
    id          Int     @id @default(autoincrement())
    make        String
    model       String
    year        Int
    vinNumber   String  @unique
    color       String?
    mileage     Int?
    description String?

    // Define the relationship
    owner  User @relation(fields: [userId], references: [id])
    userId Int

    inspections Inspection[] // One-to-many relationship with inspections

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id])
    @@index([userId])
}

model Media {
    id Int @id @default(autoincrement())

    // Vehicle Images
    interior Json? // JSON object for interior media
    exterior Json? // JSON object for exterior media
    tires    Json? // JSON object for tires media
    mirrors  Json? // JSON object for mirrors media

    // Videos
    videos Json? // JSON object for videos

    // Define the relationship to the user
    owner  User @relation(fields: [userId], references: [id])
    userId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([userId])
}

model Inspection {
    id     Int      @id @default(autoincrement())
    date   DateTime
    type   String
    status String

    // Define the relationships
    user   User @relation(fields: [userId], references: [id])
    userId Int

    vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
    vehicleId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id])
    @@index([userId])
    @@index([vehicleId])
}
