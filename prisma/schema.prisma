generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model User {
    id               Int       @id @default(autoincrement())
    firstName        String
    lastName         String
    email            String    @unique
    password         String
    phoneNumber      String?
    address          String?
    dateOfBirth      DateTime?
    profileImage     String?
    isPayingCustomer Boolean   @default(false)

    // Define relationships
    vehicles    Vehicle[]
    inspections Inspection[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id])
}

model Vehicle {
    id           Int     @id @default(autoincrement())
    make         String
    model        String
    year         Int
    color        String?
    mileage      Int?
    vinNumber    String  @unique
    licensePlate String?
    state        String?
    description  String?

    // Define relationships
    owner       User         @relation(fields: [userId], references: [id])
    userId      Int
    inspections Inspection[]
    media       Media[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id, userId])
    @@index([userId])
}

model Media {
    id Int @id @default(autoincrement())

    interior Json?
    exterior Json?
    tires    Json?
    mirrors  Json?
    videos   Json?

    // Define relationships
    vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
    vehicleId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id, vehicleId])
    @@index([vehicleId])
}

model Inspection {
    id        Int      @id @default(autoincrement())
    type      String
    date      DateTime
    time      String
    location  String
    inspector String
    status    String // Use an enum for pass/fail
    pdfCopy   String?

    // Define relationships
    vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
    vehicleId Int
    user      User    @relation(fields: [userId], references: [id])
    userId    Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([id, vehicleId, userId])
    @@index([vehicleId])
    @@index([userId])
}
